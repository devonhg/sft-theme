/****************
* Set Font Size
****************/
	@function calculateRem($size) {
	  $remSize: $size / 10px;
	  @return $remSize * 1rem;
	}

	@mixin font-size($size) {
	  font-size: $size;
	  //font-size: calculateRem($size);
	}
	/*
	Usage
		p {
		  @include font-size(14px)
		}
	Output
		p {
		  font-size: 14px; //Will be overridden if browser supports rem
		  font-size: 0.8rem;
		}
	*/

/****************
* Breakpoints
****************/
	@mixin bp-large {
	  @media only screen and (max-width: 60em) {
	    @content;
	  }
	}

	@mixin bp-medium {
	  @media only screen and (max-width: 40em) {
	    @content;
	  }
	}

	@mixin bp-small {
	  @media only screen and (max-width: 30em) {
	    @content;
	  }
	}
	/*
	Usage
		.sidebar {
		  width: 60%;
		  float: left;
		  margin: 0 2% 0 0;
		  @include bp-small {
		    width: 100%;
		    float: none;
		    margin: 0;
		  }
		}
	Output
		.sidebar {
		  width: 60%;
		  float: left;
		  margin: 0 2% 0 0;
		  @media only screen and (max-width: 30){
		    .sidebar{width: 100%; float: none; margin: 0;}
		  }
		}
	*/

/****************
* Transitions
****************/
	@mixin transition($args...) {
	  -webkit-transition: $args;
	  -moz-transition: $args;
	  -ms-transition: $args;
	  -o-transition: $args;
	  transition: $args;
	}
	/*
	Usage
		a {
		  color: gray;
		  @include transition(color .3s ease);
		  &:hover {
		    color: black;
		  }
		}
	*/

/***********************
* Cross-Browser Opacity
***********************/
	@mixin opacity($opacity) {
	  opacity: $opacity;
	  $opacity-ie: $opacity * 100;
	  filter: alpha(opacity=$opacity-ie); //IE8
	}
	/*
	Usage
		.faded-text {
		  @include opacity(0.8);
		}
	*/

/***********************
* Clearfix
***********************/
	%clearfix {
	  *zoom: 1;
	  &:before, &:after {
	    content: " ";
	    display: table;
	  }
	  &:after {
	    clear: both;
	  }
	}
	/*
	Usage
		.container-with-floated-children {
		  @extend %clearfix;
		}
	*/
/***********************
* Box Shadow
***********************/
	@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
		  @if $inset {
		    -webkit-box-shadow:inset $top $left $blur $color;
		    -moz-box-shadow:inset $top $left $blur $color;
		    box-shadow:inset $top $left $blur $color;
		  } @else {
		    -webkit-box-shadow: $top $left $blur $color;
		    -moz-box-shadow: $top $left $blur $color;
		    box-shadow: $top $left $blur $color;
		  }
		}

/********************
* Rounded
********************/
	@mixin rounded($radius: 0.5em) {
	  -webkit-border-radius: $radius;
	  -moz-border-radius: $radius;
	  border-radius: $radius;
	}